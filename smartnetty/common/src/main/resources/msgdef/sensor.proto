package protobuf;

option java_package="com.harmazing.protobuf";
option java_outer_classname="SensorProtos";

message SensorInfo {
    required string EUID = 1;
}

message SensorInfoResponse {

    required uint32 returnCode      = 1;
    optional string faultString     = 2;

    repeated Sensor sensors         = 3;
}


message AirConditionerSendorSpecificInfo {
    required int32 localTemperature                     = 1;
    required int32 targetTemperature                    = 2;

    enum AirConditionerOperatironMode {
        FANONLY     = 0;
        WARMING     = 1;
        COOLING     = 2;
        AUTO        = 3;
        DEHUMIDITY  = 4;
    }

    required AirConditionerOperatironMode operationMode = 3;
    enum AirConditionerFanMode {
        SPEED1      = 1;
        SPEED2      = 2;
        SPEED3      = 3;
        SPEED4      = 4;
        SPEED_MAX   = 5;
        SPEED_AUTO  = 6;
        SILENT      = 7;
    }
    required AirConditionerFanMode  fanMode             = 4;
    required int32 instantCapacity                      = 5;
    required int64 accumulatedKwh                       = 6;
}

message RadioInfo {
	required int32 averageRxRssi	= 1;
	required int32 averageRxLQI		= 2;
	required int32 averageTxRssi	= 3;
	required int32 averageTxLQI		= 4;
}

message WinDoorSensorSpecificInfo {
    enum WinDoorState {
        CLOSED = 0;
        OPENED = 1;
    }
    required WinDoorState state = 1;
    required int32 battery_remain = 2;
}

message PIRSensorSpecificInfo{
	enum PIRState{
		CLOSED = 0;
		OPENED = 1;
	}

	required PIRState state = 1;
	required int32 battery_remain = 2;
}

message HumiditySensorSpecificInfo{
	required int32 temperature    = 1;
	required int32 humidity       = 2;
	required int32 battery_remain = 3;
}

message Sensor {
    required string EUID                    = 1;
    enum SensorType {
        UNKNOWN             = 0;
        AIRCONDITIONER      = 1;
        WINDOWDOORSENSOR    = 2;                        // windows or door
		PIRSENSOR           = 3;
		HUMIDITYTEMPSENSRO  = 4;
    }
    required SensorType Type                = 2;
    required uint64  localTime       = 3;
    optional string name = 4 [ default = "NA" ];
    optional int32  hardwareVersion = 5;
    optional int32  softwareVersion = 6;
    optional int32  poweredOn       = 7; // 0:off 1:on
    optional AirConditionerSendorSpecificInfo acSpecificInfo = 10001;
    optional WinDoorSensorSpecificInfo        wdSpecificInfo = 10002;
	optional RadioInfo						  radioInfo      = 10003;
	optional WinDoorSensorSpecificInfo        windoorInfo    = 10004;
	optional PIRSensorSpecificInfo            pirInfo        = 10005;
	optional HumiditySensorSpecificInfo       humidityInfo   = 10006;
}
