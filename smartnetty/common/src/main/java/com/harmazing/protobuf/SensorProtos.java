// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgdef/sensor.proto

package com.harmazing.protobuf;

public final class SensorProtos {
  private SensorProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SensorInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string EUID = 1;
    /**
     * <code>required string EUID = 1;</code>
     */
    boolean hasEUID();
    /**
     * <code>required string EUID = 1;</code>
     */
    java.lang.String getEUID();
    /**
     * <code>required string EUID = 1;</code>
     */
    com.google.protobuf.ByteString
        getEUIDBytes();
  }
  /**
   * Protobuf type {@code protobuf.SensorInfo}
   */
  public static final class SensorInfo extends
      com.google.protobuf.GeneratedMessage
      implements SensorInfoOrBuilder {
    // Use SensorInfo.newBuilder() to construct.
    private SensorInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorInfo defaultInstance;
    public static SensorInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SensorInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              eUID_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.SensorInfo.class, com.harmazing.protobuf.SensorProtos.SensorInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorInfo> PARSER =
        new com.google.protobuf.AbstractParser<SensorInfo>() {
      public SensorInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string EUID = 1;
    public static final int EUID_FIELD_NUMBER = 1;
    private java.lang.Object eUID_;
    /**
     * <code>required string EUID = 1;</code>
     */
    public boolean hasEUID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string EUID = 1;</code>
     */
    public java.lang.String getEUID() {
      java.lang.Object ref = eUID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eUID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string EUID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getEUIDBytes() {
      java.lang.Object ref = eUID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      eUID_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasEUID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getEUIDBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getEUIDBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.SensorInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.SensorInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.SensorInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.SensorInfo.class, com.harmazing.protobuf.SensorProtos.SensorInfo.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.SensorInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eUID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfo_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.SensorInfo getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.SensorInfo.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.SensorInfo build() {
        com.harmazing.protobuf.SensorProtos.SensorInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.SensorInfo buildPartial() {
        com.harmazing.protobuf.SensorProtos.SensorInfo result = new com.harmazing.protobuf.SensorProtos.SensorInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eUID_ = eUID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.SensorInfo) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.SensorInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.SensorInfo other) {
        if (other == com.harmazing.protobuf.SensorProtos.SensorInfo.getDefaultInstance()) return this;
        if (other.hasEUID()) {
          bitField0_ |= 0x00000001;
          eUID_ = other.eUID_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEUID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.SensorInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.SensorInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string EUID = 1;
      private java.lang.Object eUID_ = "";
      /**
       * <code>required string EUID = 1;</code>
       */
      public boolean hasEUID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public java.lang.String getEUID() {
        java.lang.Object ref = eUID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          eUID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getEUIDBytes() {
        java.lang.Object ref = eUID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eUID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public Builder setEUID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        eUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public Builder clearEUID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eUID_ = getDefaultInstance().getEUID();
        onChanged();
        return this;
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public Builder setEUIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        eUID_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.SensorInfo)
    }

    static {
      defaultInstance = new SensorInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.SensorInfo)
  }

  public interface SensorInfoResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 returnCode = 1;
    /**
     * <code>required uint32 returnCode = 1;</code>
     */
    boolean hasReturnCode();
    /**
     * <code>required uint32 returnCode = 1;</code>
     */
    int getReturnCode();

    // optional string faultString = 2;
    /**
     * <code>optional string faultString = 2;</code>
     */
    boolean hasFaultString();
    /**
     * <code>optional string faultString = 2;</code>
     */
    java.lang.String getFaultString();
    /**
     * <code>optional string faultString = 2;</code>
     */
    com.google.protobuf.ByteString
        getFaultStringBytes();

    // repeated .protobuf.Sensor sensors = 3;
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    java.util.List<com.harmazing.protobuf.SensorProtos.Sensor> 
        getSensorsList();
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    com.harmazing.protobuf.SensorProtos.Sensor getSensors(int index);
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    int getSensorsCount();
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    java.util.List<? extends com.harmazing.protobuf.SensorProtos.SensorOrBuilder> 
        getSensorsOrBuilderList();
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    com.harmazing.protobuf.SensorProtos.SensorOrBuilder getSensorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.SensorInfoResponse}
   */
  public static final class SensorInfoResponse extends
      com.google.protobuf.GeneratedMessage
      implements SensorInfoResponseOrBuilder {
    // Use SensorInfoResponse.newBuilder() to construct.
    private SensorInfoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorInfoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorInfoResponse defaultInstance;
    public static SensorInfoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SensorInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              returnCode_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              faultString_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                sensors_ = new java.util.ArrayList<com.harmazing.protobuf.SensorProtos.Sensor>();
                mutable_bitField0_ |= 0x00000004;
              }
              sensors_.add(input.readMessage(com.harmazing.protobuf.SensorProtos.Sensor.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          sensors_ = java.util.Collections.unmodifiableList(sensors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.SensorInfoResponse.class, com.harmazing.protobuf.SensorProtos.SensorInfoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorInfoResponse> PARSER =
        new com.google.protobuf.AbstractParser<SensorInfoResponse>() {
      public SensorInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorInfoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorInfoResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 returnCode = 1;
    public static final int RETURNCODE_FIELD_NUMBER = 1;
    private int returnCode_;
    /**
     * <code>required uint32 returnCode = 1;</code>
     */
    public boolean hasReturnCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 returnCode = 1;</code>
     */
    public int getReturnCode() {
      return returnCode_;
    }

    // optional string faultString = 2;
    public static final int FAULTSTRING_FIELD_NUMBER = 2;
    private java.lang.Object faultString_;
    /**
     * <code>optional string faultString = 2;</code>
     */
    public boolean hasFaultString() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string faultString = 2;</code>
     */
    public java.lang.String getFaultString() {
      java.lang.Object ref = faultString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          faultString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string faultString = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFaultStringBytes() {
      java.lang.Object ref = faultString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        faultString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .protobuf.Sensor sensors = 3;
    public static final int SENSORS_FIELD_NUMBER = 3;
    private java.util.List<com.harmazing.protobuf.SensorProtos.Sensor> sensors_;
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    public java.util.List<com.harmazing.protobuf.SensorProtos.Sensor> getSensorsList() {
      return sensors_;
    }
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    public java.util.List<? extends com.harmazing.protobuf.SensorProtos.SensorOrBuilder> 
        getSensorsOrBuilderList() {
      return sensors_;
    }
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    public int getSensorsCount() {
      return sensors_.size();
    }
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    public com.harmazing.protobuf.SensorProtos.Sensor getSensors(int index) {
      return sensors_.get(index);
    }
    /**
     * <code>repeated .protobuf.Sensor sensors = 3;</code>
     */
    public com.harmazing.protobuf.SensorProtos.SensorOrBuilder getSensorsOrBuilder(
        int index) {
      return sensors_.get(index);
    }

    private void initFields() {
      returnCode_ = 0;
      faultString_ = "";
      sensors_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReturnCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSensorsCount(); i++) {
        if (!getSensors(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, returnCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFaultStringBytes());
      }
      for (int i = 0; i < sensors_.size(); i++) {
        output.writeMessage(3, sensors_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, returnCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFaultStringBytes());
      }
      for (int i = 0; i < sensors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sensors_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.SensorInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.SensorInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.SensorInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.SensorInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.SensorInfoResponse.class, com.harmazing.protobuf.SensorProtos.SensorInfoResponse.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.SensorInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSensorsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        returnCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        faultString_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_SensorInfoResponse_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.SensorInfoResponse getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.SensorInfoResponse.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.SensorInfoResponse build() {
        com.harmazing.protobuf.SensorProtos.SensorInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.SensorInfoResponse buildPartial() {
        com.harmazing.protobuf.SensorProtos.SensorInfoResponse result = new com.harmazing.protobuf.SensorProtos.SensorInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.returnCode_ = returnCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.faultString_ = faultString_;
        if (sensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            sensors_ = java.util.Collections.unmodifiableList(sensors_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.sensors_ = sensors_;
        } else {
          result.sensors_ = sensorsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.SensorInfoResponse) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.SensorInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.SensorInfoResponse other) {
        if (other == com.harmazing.protobuf.SensorProtos.SensorInfoResponse.getDefaultInstance()) return this;
        if (other.hasReturnCode()) {
          setReturnCode(other.getReturnCode());
        }
        if (other.hasFaultString()) {
          bitField0_ |= 0x00000002;
          faultString_ = other.faultString_;
          onChanged();
        }
        if (sensorsBuilder_ == null) {
          if (!other.sensors_.isEmpty()) {
            if (sensors_.isEmpty()) {
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSensorsIsMutable();
              sensors_.addAll(other.sensors_);
            }
            onChanged();
          }
        } else {
          if (!other.sensors_.isEmpty()) {
            if (sensorsBuilder_.isEmpty()) {
              sensorsBuilder_.dispose();
              sensorsBuilder_ = null;
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000004);
              sensorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSensorsFieldBuilder() : null;
            } else {
              sensorsBuilder_.addAllMessages(other.sensors_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReturnCode()) {
          
          return false;
        }
        for (int i = 0; i < getSensorsCount(); i++) {
          if (!getSensors(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.SensorInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.SensorInfoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 returnCode = 1;
      private int returnCode_ ;
      /**
       * <code>required uint32 returnCode = 1;</code>
       */
      public boolean hasReturnCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 returnCode = 1;</code>
       */
      public int getReturnCode() {
        return returnCode_;
      }
      /**
       * <code>required uint32 returnCode = 1;</code>
       */
      public Builder setReturnCode(int value) {
        bitField0_ |= 0x00000001;
        returnCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 returnCode = 1;</code>
       */
      public Builder clearReturnCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        returnCode_ = 0;
        onChanged();
        return this;
      }

      // optional string faultString = 2;
      private java.lang.Object faultString_ = "";
      /**
       * <code>optional string faultString = 2;</code>
       */
      public boolean hasFaultString() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string faultString = 2;</code>
       */
      public java.lang.String getFaultString() {
        java.lang.Object ref = faultString_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          faultString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string faultString = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFaultStringBytes() {
        java.lang.Object ref = faultString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          faultString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string faultString = 2;</code>
       */
      public Builder setFaultString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        faultString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string faultString = 2;</code>
       */
      public Builder clearFaultString() {
        bitField0_ = (bitField0_ & ~0x00000002);
        faultString_ = getDefaultInstance().getFaultString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string faultString = 2;</code>
       */
      public Builder setFaultStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        faultString_ = value;
        onChanged();
        return this;
      }

      // repeated .protobuf.Sensor sensors = 3;
      private java.util.List<com.harmazing.protobuf.SensorProtos.Sensor> sensors_ =
        java.util.Collections.emptyList();
      private void ensureSensorsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          sensors_ = new java.util.ArrayList<com.harmazing.protobuf.SensorProtos.Sensor>(sensors_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.harmazing.protobuf.SensorProtos.Sensor, com.harmazing.protobuf.SensorProtos.Sensor.Builder, com.harmazing.protobuf.SensorProtos.SensorOrBuilder> sensorsBuilder_;

      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public java.util.List<com.harmazing.protobuf.SensorProtos.Sensor> getSensorsList() {
        if (sensorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensors_);
        } else {
          return sensorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public int getSensorsCount() {
        if (sensorsBuilder_ == null) {
          return sensors_.size();
        } else {
          return sensorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public com.harmazing.protobuf.SensorProtos.Sensor getSensors(int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);
        } else {
          return sensorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder setSensors(
          int index, com.harmazing.protobuf.SensorProtos.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.set(index, value);
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder setSensors(
          int index, com.harmazing.protobuf.SensorProtos.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder addSensors(com.harmazing.protobuf.SensorProtos.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder addSensors(
          int index, com.harmazing.protobuf.SensorProtos.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(index, value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder addSensors(
          com.harmazing.protobuf.SensorProtos.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder addSensors(
          int index, com.harmazing.protobuf.SensorProtos.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder addAllSensors(
          java.lang.Iterable<? extends com.harmazing.protobuf.SensorProtos.Sensor> values) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          super.addAll(values, sensors_);
          onChanged();
        } else {
          sensorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder clearSensors() {
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public Builder removeSensors(int index) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.remove(index);
          onChanged();
        } else {
          sensorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public com.harmazing.protobuf.SensorProtos.Sensor.Builder getSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public com.harmazing.protobuf.SensorProtos.SensorOrBuilder getSensorsOrBuilder(
          int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);  } else {
          return sensorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public java.util.List<? extends com.harmazing.protobuf.SensorProtos.SensorOrBuilder> 
           getSensorsOrBuilderList() {
        if (sensorsBuilder_ != null) {
          return sensorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensors_);
        }
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public com.harmazing.protobuf.SensorProtos.Sensor.Builder addSensorsBuilder() {
        return getSensorsFieldBuilder().addBuilder(
            com.harmazing.protobuf.SensorProtos.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public com.harmazing.protobuf.SensorProtos.Sensor.Builder addSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().addBuilder(
            index, com.harmazing.protobuf.SensorProtos.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Sensor sensors = 3;</code>
       */
      public java.util.List<com.harmazing.protobuf.SensorProtos.Sensor.Builder> 
           getSensorsBuilderList() {
        return getSensorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.harmazing.protobuf.SensorProtos.Sensor, com.harmazing.protobuf.SensorProtos.Sensor.Builder, com.harmazing.protobuf.SensorProtos.SensorOrBuilder> 
          getSensorsFieldBuilder() {
        if (sensorsBuilder_ == null) {
          sensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.harmazing.protobuf.SensorProtos.Sensor, com.harmazing.protobuf.SensorProtos.Sensor.Builder, com.harmazing.protobuf.SensorProtos.SensorOrBuilder>(
                  sensors_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          sensors_ = null;
        }
        return sensorsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.SensorInfoResponse)
    }

    static {
      defaultInstance = new SensorInfoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.SensorInfoResponse)
  }

  public interface AirConditionerSendorSpecificInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 localTemperature = 1;
    /**
     * <code>required int32 localTemperature = 1;</code>
     */
    boolean hasLocalTemperature();
    /**
     * <code>required int32 localTemperature = 1;</code>
     */
    int getLocalTemperature();

    // required int32 targetTemperature = 2;
    /**
     * <code>required int32 targetTemperature = 2;</code>
     */
    boolean hasTargetTemperature();
    /**
     * <code>required int32 targetTemperature = 2;</code>
     */
    int getTargetTemperature();

    // required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
     */
    boolean hasOperationMode();
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
     */
    com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode getOperationMode();

    // required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
     */
    boolean hasFanMode();
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
     */
    com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode getFanMode();

    // required int32 instantCapacity = 5;
    /**
     * <code>required int32 instantCapacity = 5;</code>
     */
    boolean hasInstantCapacity();
    /**
     * <code>required int32 instantCapacity = 5;</code>
     */
    int getInstantCapacity();

    // required int64 accumulatedKwh = 6;
    /**
     * <code>required int64 accumulatedKwh = 6;</code>
     */
    boolean hasAccumulatedKwh();
    /**
     * <code>required int64 accumulatedKwh = 6;</code>
     */
    long getAccumulatedKwh();
  }
  /**
   * Protobuf type {@code protobuf.AirConditionerSendorSpecificInfo}
   */
  public static final class AirConditionerSendorSpecificInfo extends
      com.google.protobuf.GeneratedMessage
      implements AirConditionerSendorSpecificInfoOrBuilder {
    // Use AirConditionerSendorSpecificInfo.newBuilder() to construct.
    private AirConditionerSendorSpecificInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AirConditionerSendorSpecificInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AirConditionerSendorSpecificInfo defaultInstance;
    public static AirConditionerSendorSpecificInfo getDefaultInstance() {
      return defaultInstance;
    }

    public AirConditionerSendorSpecificInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AirConditionerSendorSpecificInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              localTemperature_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetTemperature_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode value = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                operationMode_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode value = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                fanMode_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              instantCapacity_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              accumulatedKwh_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_AirConditionerSendorSpecificInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_AirConditionerSendorSpecificInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<AirConditionerSendorSpecificInfo> PARSER =
        new com.google.protobuf.AbstractParser<AirConditionerSendorSpecificInfo>() {
      public AirConditionerSendorSpecificInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AirConditionerSendorSpecificInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AirConditionerSendorSpecificInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode}
     */
    public enum AirConditionerOperatironMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FANONLY = 0;</code>
       */
      FANONLY(0, 0),
      /**
       * <code>WARMING = 1;</code>
       */
      WARMING(1, 1),
      /**
       * <code>COOLING = 2;</code>
       */
      COOLING(2, 2),
      /**
       * <code>AUTO = 3;</code>
       */
      AUTO(3, 3),
      /**
       * <code>DEHUMIDITY = 4;</code>
       */
      DEHUMIDITY(4, 4),
      ;

      /**
       * <code>FANONLY = 0;</code>
       */
      public static final int FANONLY_VALUE = 0;
      /**
       * <code>WARMING = 1;</code>
       */
      public static final int WARMING_VALUE = 1;
      /**
       * <code>COOLING = 2;</code>
       */
      public static final int COOLING_VALUE = 2;
      /**
       * <code>AUTO = 3;</code>
       */
      public static final int AUTO_VALUE = 3;
      /**
       * <code>DEHUMIDITY = 4;</code>
       */
      public static final int DEHUMIDITY_VALUE = 4;


      public final int getNumber() { return value; }

      public static AirConditionerOperatironMode valueOf(int value) {
        switch (value) {
          case 0: return FANONLY;
          case 1: return WARMING;
          case 2: return COOLING;
          case 3: return AUTO;
          case 4: return DEHUMIDITY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AirConditionerOperatironMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AirConditionerOperatironMode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AirConditionerOperatironMode>() {
              public AirConditionerOperatironMode findValueByNumber(int number) {
                return AirConditionerOperatironMode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final AirConditionerOperatironMode[] VALUES = values();

      public static AirConditionerOperatironMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private AirConditionerOperatironMode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode)
    }

    /**
     * Protobuf enum {@code protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode}
     */
    public enum AirConditionerFanMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SPEED1 = 1;</code>
       */
      SPEED1(0, 1),
      /**
       * <code>SPEED2 = 2;</code>
       */
      SPEED2(1, 2),
      /**
       * <code>SPEED3 = 3;</code>
       */
      SPEED3(2, 3),
      /**
       * <code>SPEED4 = 4;</code>
       */
      SPEED4(3, 4),
      /**
       * <code>SPEED_MAX = 5;</code>
       */
      SPEED_MAX(4, 5),
      /**
       * <code>SPEED_AUTO = 6;</code>
       */
      SPEED_AUTO(5, 6),
      /**
       * <code>SILENT = 7;</code>
       */
      SILENT(6, 7),
      ;

      /**
       * <code>SPEED1 = 1;</code>
       */
      public static final int SPEED1_VALUE = 1;
      /**
       * <code>SPEED2 = 2;</code>
       */
      public static final int SPEED2_VALUE = 2;
      /**
       * <code>SPEED3 = 3;</code>
       */
      public static final int SPEED3_VALUE = 3;
      /**
       * <code>SPEED4 = 4;</code>
       */
      public static final int SPEED4_VALUE = 4;
      /**
       * <code>SPEED_MAX = 5;</code>
       */
      public static final int SPEED_MAX_VALUE = 5;
      /**
       * <code>SPEED_AUTO = 6;</code>
       */
      public static final int SPEED_AUTO_VALUE = 6;
      /**
       * <code>SILENT = 7;</code>
       */
      public static final int SILENT_VALUE = 7;


      public final int getNumber() { return value; }

      public static AirConditionerFanMode valueOf(int value) {
        switch (value) {
          case 1: return SPEED1;
          case 2: return SPEED2;
          case 3: return SPEED3;
          case 4: return SPEED4;
          case 5: return SPEED_MAX;
          case 6: return SPEED_AUTO;
          case 7: return SILENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AirConditionerFanMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AirConditionerFanMode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AirConditionerFanMode>() {
              public AirConditionerFanMode findValueByNumber(int number) {
                return AirConditionerFanMode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDescriptor().getEnumTypes().get(1);
      }

      private static final AirConditionerFanMode[] VALUES = values();

      public static AirConditionerFanMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private AirConditionerFanMode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode)
    }

    private int bitField0_;
    // required int32 localTemperature = 1;
    public static final int LOCALTEMPERATURE_FIELD_NUMBER = 1;
    private int localTemperature_;
    /**
     * <code>required int32 localTemperature = 1;</code>
     */
    public boolean hasLocalTemperature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 localTemperature = 1;</code>
     */
    public int getLocalTemperature() {
      return localTemperature_;
    }

    // required int32 targetTemperature = 2;
    public static final int TARGETTEMPERATURE_FIELD_NUMBER = 2;
    private int targetTemperature_;
    /**
     * <code>required int32 targetTemperature = 2;</code>
     */
    public boolean hasTargetTemperature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 targetTemperature = 2;</code>
     */
    public int getTargetTemperature() {
      return targetTemperature_;
    }

    // required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;
    public static final int OPERATIONMODE_FIELD_NUMBER = 3;
    private com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode_;
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
     */
    public boolean hasOperationMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
     */
    public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode getOperationMode() {
      return operationMode_;
    }

    // required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;
    public static final int FANMODE_FIELD_NUMBER = 4;
    private com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode_;
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
     */
    public boolean hasFanMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
     */
    public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode getFanMode() {
      return fanMode_;
    }

    // required int32 instantCapacity = 5;
    public static final int INSTANTCAPACITY_FIELD_NUMBER = 5;
    private int instantCapacity_;
    /**
     * <code>required int32 instantCapacity = 5;</code>
     */
    public boolean hasInstantCapacity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 instantCapacity = 5;</code>
     */
    public int getInstantCapacity() {
      return instantCapacity_;
    }

    // required int64 accumulatedKwh = 6;
    public static final int ACCUMULATEDKWH_FIELD_NUMBER = 6;
    private long accumulatedKwh_;
    /**
     * <code>required int64 accumulatedKwh = 6;</code>
     */
    public boolean hasAccumulatedKwh() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 accumulatedKwh = 6;</code>
     */
    public long getAccumulatedKwh() {
      return accumulatedKwh_;
    }

    private void initFields() {
      localTemperature_ = 0;
      targetTemperature_ = 0;
      operationMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode.FANONLY;
      fanMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode.SPEED1;
      instantCapacity_ = 0;
      accumulatedKwh_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLocalTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTargetTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperationMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFanMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInstantCapacity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccumulatedKwh()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, localTemperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, targetTemperature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, operationMode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, fanMode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, instantCapacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, accumulatedKwh_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, localTemperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, targetTemperature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, operationMode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, fanMode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, instantCapacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, accumulatedKwh_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.AirConditionerSendorSpecificInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_AirConditionerSendorSpecificInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_AirConditionerSendorSpecificInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        localTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetTemperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        operationMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode.FANONLY;
        bitField0_ = (bitField0_ & ~0x00000004);
        fanMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode.SPEED1;
        bitField0_ = (bitField0_ & ~0x00000008);
        instantCapacity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        accumulatedKwh_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_AirConditionerSendorSpecificInfo_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo build() {
        com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo buildPartial() {
        com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo result = new com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.localTemperature_ = localTemperature_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetTemperature_ = targetTemperature_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operationMode_ = operationMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fanMode_ = fanMode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.instantCapacity_ = instantCapacity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.accumulatedKwh_ = accumulatedKwh_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo other) {
        if (other == com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDefaultInstance()) return this;
        if (other.hasLocalTemperature()) {
          setLocalTemperature(other.getLocalTemperature());
        }
        if (other.hasTargetTemperature()) {
          setTargetTemperature(other.getTargetTemperature());
        }
        if (other.hasOperationMode()) {
          setOperationMode(other.getOperationMode());
        }
        if (other.hasFanMode()) {
          setFanMode(other.getFanMode());
        }
        if (other.hasInstantCapacity()) {
          setInstantCapacity(other.getInstantCapacity());
        }
        if (other.hasAccumulatedKwh()) {
          setAccumulatedKwh(other.getAccumulatedKwh());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLocalTemperature()) {
          
          return false;
        }
        if (!hasTargetTemperature()) {
          
          return false;
        }
        if (!hasOperationMode()) {
          
          return false;
        }
        if (!hasFanMode()) {
          
          return false;
        }
        if (!hasInstantCapacity()) {
          
          return false;
        }
        if (!hasAccumulatedKwh()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 localTemperature = 1;
      private int localTemperature_ ;
      /**
       * <code>required int32 localTemperature = 1;</code>
       */
      public boolean hasLocalTemperature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 localTemperature = 1;</code>
       */
      public int getLocalTemperature() {
        return localTemperature_;
      }
      /**
       * <code>required int32 localTemperature = 1;</code>
       */
      public Builder setLocalTemperature(int value) {
        bitField0_ |= 0x00000001;
        localTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 localTemperature = 1;</code>
       */
      public Builder clearLocalTemperature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        localTemperature_ = 0;
        onChanged();
        return this;
      }

      // required int32 targetTemperature = 2;
      private int targetTemperature_ ;
      /**
       * <code>required int32 targetTemperature = 2;</code>
       */
      public boolean hasTargetTemperature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 targetTemperature = 2;</code>
       */
      public int getTargetTemperature() {
        return targetTemperature_;
      }
      /**
       * <code>required int32 targetTemperature = 2;</code>
       */
      public Builder setTargetTemperature(int value) {
        bitField0_ |= 0x00000002;
        targetTemperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 targetTemperature = 2;</code>
       */
      public Builder clearTargetTemperature() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetTemperature_ = 0;
        onChanged();
        return this;
      }

      // required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;
      private com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode.FANONLY;
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
       */
      public boolean hasOperationMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
       */
      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode getOperationMode() {
        return operationMode_;
      }
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
       */
      public Builder setOperationMode(com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        operationMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode operationMode = 3;</code>
       */
      public Builder clearOperationMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operationMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerOperatironMode.FANONLY;
        onChanged();
        return this;
      }

      // required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;
      private com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode.SPEED1;
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
       */
      public boolean hasFanMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
       */
      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode getFanMode() {
        return fanMode_;
      }
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
       */
      public Builder setFanMode(com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        fanMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protobuf.AirConditionerSendorSpecificInfo.AirConditionerFanMode fanMode = 4;</code>
       */
      public Builder clearFanMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fanMode_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.AirConditionerFanMode.SPEED1;
        onChanged();
        return this;
      }

      // required int32 instantCapacity = 5;
      private int instantCapacity_ ;
      /**
       * <code>required int32 instantCapacity = 5;</code>
       */
      public boolean hasInstantCapacity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 instantCapacity = 5;</code>
       */
      public int getInstantCapacity() {
        return instantCapacity_;
      }
      /**
       * <code>required int32 instantCapacity = 5;</code>
       */
      public Builder setInstantCapacity(int value) {
        bitField0_ |= 0x00000010;
        instantCapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 instantCapacity = 5;</code>
       */
      public Builder clearInstantCapacity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        instantCapacity_ = 0;
        onChanged();
        return this;
      }

      // required int64 accumulatedKwh = 6;
      private long accumulatedKwh_ ;
      /**
       * <code>required int64 accumulatedKwh = 6;</code>
       */
      public boolean hasAccumulatedKwh() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 accumulatedKwh = 6;</code>
       */
      public long getAccumulatedKwh() {
        return accumulatedKwh_;
      }
      /**
       * <code>required int64 accumulatedKwh = 6;</code>
       */
      public Builder setAccumulatedKwh(long value) {
        bitField0_ |= 0x00000020;
        accumulatedKwh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 accumulatedKwh = 6;</code>
       */
      public Builder clearAccumulatedKwh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        accumulatedKwh_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.AirConditionerSendorSpecificInfo)
    }

    static {
      defaultInstance = new AirConditionerSendorSpecificInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.AirConditionerSendorSpecificInfo)
  }

  public interface RadioInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 averageRxRssi = 1;
    /**
     * <code>required int32 averageRxRssi = 1;</code>
     */
    boolean hasAverageRxRssi();
    /**
     * <code>required int32 averageRxRssi = 1;</code>
     */
    int getAverageRxRssi();

    // required int32 averageRxLQI = 2;
    /**
     * <code>required int32 averageRxLQI = 2;</code>
     */
    boolean hasAverageRxLQI();
    /**
     * <code>required int32 averageRxLQI = 2;</code>
     */
    int getAverageRxLQI();

    // required int32 averageTxRssi = 3;
    /**
     * <code>required int32 averageTxRssi = 3;</code>
     */
    boolean hasAverageTxRssi();
    /**
     * <code>required int32 averageTxRssi = 3;</code>
     */
    int getAverageTxRssi();

    // required int32 averageTxLQI = 4;
    /**
     * <code>required int32 averageTxLQI = 4;</code>
     */
    boolean hasAverageTxLQI();
    /**
     * <code>required int32 averageTxLQI = 4;</code>
     */
    int getAverageTxLQI();
  }
  /**
   * Protobuf type {@code protobuf.RadioInfo}
   */
  public static final class RadioInfo extends
      com.google.protobuf.GeneratedMessage
      implements RadioInfoOrBuilder {
    // Use RadioInfo.newBuilder() to construct.
    private RadioInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RadioInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RadioInfo defaultInstance;
    public static RadioInfo getDefaultInstance() {
      return defaultInstance;
    }

    public RadioInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RadioInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              averageRxRssi_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              averageRxLQI_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              averageTxRssi_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              averageTxLQI_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_RadioInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_RadioInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.RadioInfo.class, com.harmazing.protobuf.SensorProtos.RadioInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<RadioInfo> PARSER =
        new com.google.protobuf.AbstractParser<RadioInfo>() {
      public RadioInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RadioInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RadioInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 averageRxRssi = 1;
    public static final int AVERAGERXRSSI_FIELD_NUMBER = 1;
    private int averageRxRssi_;
    /**
     * <code>required int32 averageRxRssi = 1;</code>
     */
    public boolean hasAverageRxRssi() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 averageRxRssi = 1;</code>
     */
    public int getAverageRxRssi() {
      return averageRxRssi_;
    }

    // required int32 averageRxLQI = 2;
    public static final int AVERAGERXLQI_FIELD_NUMBER = 2;
    private int averageRxLQI_;
    /**
     * <code>required int32 averageRxLQI = 2;</code>
     */
    public boolean hasAverageRxLQI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 averageRxLQI = 2;</code>
     */
    public int getAverageRxLQI() {
      return averageRxLQI_;
    }

    // required int32 averageTxRssi = 3;
    public static final int AVERAGETXRSSI_FIELD_NUMBER = 3;
    private int averageTxRssi_;
    /**
     * <code>required int32 averageTxRssi = 3;</code>
     */
    public boolean hasAverageTxRssi() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 averageTxRssi = 3;</code>
     */
    public int getAverageTxRssi() {
      return averageTxRssi_;
    }

    // required int32 averageTxLQI = 4;
    public static final int AVERAGETXLQI_FIELD_NUMBER = 4;
    private int averageTxLQI_;
    /**
     * <code>required int32 averageTxLQI = 4;</code>
     */
    public boolean hasAverageTxLQI() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 averageTxLQI = 4;</code>
     */
    public int getAverageTxLQI() {
      return averageTxLQI_;
    }

    private void initFields() {
      averageRxRssi_ = 0;
      averageRxLQI_ = 0;
      averageTxRssi_ = 0;
      averageTxLQI_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAverageRxRssi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAverageRxLQI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAverageTxRssi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAverageTxLQI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, averageRxRssi_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, averageRxLQI_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, averageTxRssi_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, averageTxLQI_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, averageRxRssi_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, averageRxLQI_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, averageTxRssi_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, averageTxLQI_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.RadioInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.RadioInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.RadioInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.RadioInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_RadioInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_RadioInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.RadioInfo.class, com.harmazing.protobuf.SensorProtos.RadioInfo.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.RadioInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        averageRxRssi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        averageRxLQI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        averageTxRssi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        averageTxLQI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_RadioInfo_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.RadioInfo getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.RadioInfo.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.RadioInfo build() {
        com.harmazing.protobuf.SensorProtos.RadioInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.RadioInfo buildPartial() {
        com.harmazing.protobuf.SensorProtos.RadioInfo result = new com.harmazing.protobuf.SensorProtos.RadioInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.averageRxRssi_ = averageRxRssi_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.averageRxLQI_ = averageRxLQI_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.averageTxRssi_ = averageTxRssi_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.averageTxLQI_ = averageTxLQI_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.RadioInfo) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.RadioInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.RadioInfo other) {
        if (other == com.harmazing.protobuf.SensorProtos.RadioInfo.getDefaultInstance()) return this;
        if (other.hasAverageRxRssi()) {
          setAverageRxRssi(other.getAverageRxRssi());
        }
        if (other.hasAverageRxLQI()) {
          setAverageRxLQI(other.getAverageRxLQI());
        }
        if (other.hasAverageTxRssi()) {
          setAverageTxRssi(other.getAverageTxRssi());
        }
        if (other.hasAverageTxLQI()) {
          setAverageTxLQI(other.getAverageTxLQI());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAverageRxRssi()) {
          
          return false;
        }
        if (!hasAverageRxLQI()) {
          
          return false;
        }
        if (!hasAverageTxRssi()) {
          
          return false;
        }
        if (!hasAverageTxLQI()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.RadioInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.RadioInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 averageRxRssi = 1;
      private int averageRxRssi_ ;
      /**
       * <code>required int32 averageRxRssi = 1;</code>
       */
      public boolean hasAverageRxRssi() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 averageRxRssi = 1;</code>
       */
      public int getAverageRxRssi() {
        return averageRxRssi_;
      }
      /**
       * <code>required int32 averageRxRssi = 1;</code>
       */
      public Builder setAverageRxRssi(int value) {
        bitField0_ |= 0x00000001;
        averageRxRssi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 averageRxRssi = 1;</code>
       */
      public Builder clearAverageRxRssi() {
        bitField0_ = (bitField0_ & ~0x00000001);
        averageRxRssi_ = 0;
        onChanged();
        return this;
      }

      // required int32 averageRxLQI = 2;
      private int averageRxLQI_ ;
      /**
       * <code>required int32 averageRxLQI = 2;</code>
       */
      public boolean hasAverageRxLQI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 averageRxLQI = 2;</code>
       */
      public int getAverageRxLQI() {
        return averageRxLQI_;
      }
      /**
       * <code>required int32 averageRxLQI = 2;</code>
       */
      public Builder setAverageRxLQI(int value) {
        bitField0_ |= 0x00000002;
        averageRxLQI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 averageRxLQI = 2;</code>
       */
      public Builder clearAverageRxLQI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        averageRxLQI_ = 0;
        onChanged();
        return this;
      }

      // required int32 averageTxRssi = 3;
      private int averageTxRssi_ ;
      /**
       * <code>required int32 averageTxRssi = 3;</code>
       */
      public boolean hasAverageTxRssi() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 averageTxRssi = 3;</code>
       */
      public int getAverageTxRssi() {
        return averageTxRssi_;
      }
      /**
       * <code>required int32 averageTxRssi = 3;</code>
       */
      public Builder setAverageTxRssi(int value) {
        bitField0_ |= 0x00000004;
        averageTxRssi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 averageTxRssi = 3;</code>
       */
      public Builder clearAverageTxRssi() {
        bitField0_ = (bitField0_ & ~0x00000004);
        averageTxRssi_ = 0;
        onChanged();
        return this;
      }

      // required int32 averageTxLQI = 4;
      private int averageTxLQI_ ;
      /**
       * <code>required int32 averageTxLQI = 4;</code>
       */
      public boolean hasAverageTxLQI() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 averageTxLQI = 4;</code>
       */
      public int getAverageTxLQI() {
        return averageTxLQI_;
      }
      /**
       * <code>required int32 averageTxLQI = 4;</code>
       */
      public Builder setAverageTxLQI(int value) {
        bitField0_ |= 0x00000008;
        averageTxLQI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 averageTxLQI = 4;</code>
       */
      public Builder clearAverageTxLQI() {
        bitField0_ = (bitField0_ & ~0x00000008);
        averageTxLQI_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.RadioInfo)
    }

    static {
      defaultInstance = new RadioInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.RadioInfo)
  }

  public interface WinDoorSensorSpecificInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;
    /**
     * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
     */
    com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState getState();

    // required int32 battery_remain = 2;
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    boolean hasBatteryRemain();
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    int getBatteryRemain();
  }
  /**
   * Protobuf type {@code protobuf.WinDoorSensorSpecificInfo}
   */
  public static final class WinDoorSensorSpecificInfo extends
      com.google.protobuf.GeneratedMessage
      implements WinDoorSensorSpecificInfoOrBuilder {
    // Use WinDoorSensorSpecificInfo.newBuilder() to construct.
    private WinDoorSensorSpecificInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WinDoorSensorSpecificInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WinDoorSensorSpecificInfo defaultInstance;
    public static WinDoorSensorSpecificInfo getDefaultInstance() {
      return defaultInstance;
    }

    public WinDoorSensorSpecificInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WinDoorSensorSpecificInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState value = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              batteryRemain_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_WinDoorSensorSpecificInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_WinDoorSensorSpecificInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<WinDoorSensorSpecificInfo> PARSER =
        new com.google.protobuf.AbstractParser<WinDoorSensorSpecificInfo>() {
      public WinDoorSensorSpecificInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WinDoorSensorSpecificInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WinDoorSensorSpecificInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code protobuf.WinDoorSensorSpecificInfo.WinDoorState}
     */
    public enum WinDoorState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CLOSED = 0;</code>
       */
      CLOSED(0, 0),
      /**
       * <code>OPENED = 1;</code>
       */
      OPENED(1, 1),
      ;

      /**
       * <code>CLOSED = 0;</code>
       */
      public static final int CLOSED_VALUE = 0;
      /**
       * <code>OPENED = 1;</code>
       */
      public static final int OPENED_VALUE = 1;


      public final int getNumber() { return value; }

      public static WinDoorState valueOf(int value) {
        switch (value) {
          case 0: return CLOSED;
          case 1: return OPENED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WinDoorState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<WinDoorState>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WinDoorState>() {
              public WinDoorState findValueByNumber(int number) {
                return WinDoorState.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final WinDoorState[] VALUES = values();

      public static WinDoorState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private WinDoorState(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.WinDoorSensorSpecificInfo.WinDoorState)
    }

    private int bitField0_;
    // required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState state_;
    /**
     * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
     */
    public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState getState() {
      return state_;
    }

    // required int32 battery_remain = 2;
    public static final int BATTERY_REMAIN_FIELD_NUMBER = 2;
    private int batteryRemain_;
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    public boolean hasBatteryRemain() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    public int getBatteryRemain() {
      return batteryRemain_;
    }

    private void initFields() {
      state_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState.CLOSED;
      batteryRemain_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBatteryRemain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, batteryRemain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, batteryRemain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.WinDoorSensorSpecificInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_WinDoorSensorSpecificInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_WinDoorSensorSpecificInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState.CLOSED;
        bitField0_ = (bitField0_ & ~0x00000001);
        batteryRemain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_WinDoorSensorSpecificInfo_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo build() {
        com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo buildPartial() {
        com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo result = new com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.batteryRemain_ = batteryRemain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo other) {
        if (other == com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasBatteryRemain()) {
          setBatteryRemain(other.getBatteryRemain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          
          return false;
        }
        if (!hasBatteryRemain()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;
      private com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState state_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState.CLOSED;
      /**
       * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
       */
      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState getState() {
        return state_;
      }
      /**
       * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
       */
      public Builder setState(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protobuf.WinDoorSensorSpecificInfo.WinDoorState state = 1;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.WinDoorState.CLOSED;
        onChanged();
        return this;
      }

      // required int32 battery_remain = 2;
      private int batteryRemain_ ;
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public boolean hasBatteryRemain() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public int getBatteryRemain() {
        return batteryRemain_;
      }
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public Builder setBatteryRemain(int value) {
        bitField0_ |= 0x00000002;
        batteryRemain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public Builder clearBatteryRemain() {
        bitField0_ = (bitField0_ & ~0x00000002);
        batteryRemain_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.WinDoorSensorSpecificInfo)
    }

    static {
      defaultInstance = new WinDoorSensorSpecificInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.WinDoorSensorSpecificInfo)
  }

  public interface PIRSensorSpecificInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;
    /**
     * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
     */
    com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState getState();

    // required int32 battery_remain = 2;
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    boolean hasBatteryRemain();
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    int getBatteryRemain();
  }
  /**
   * Protobuf type {@code protobuf.PIRSensorSpecificInfo}
   */
  public static final class PIRSensorSpecificInfo extends
      com.google.protobuf.GeneratedMessage
      implements PIRSensorSpecificInfoOrBuilder {
    // Use PIRSensorSpecificInfo.newBuilder() to construct.
    private PIRSensorSpecificInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PIRSensorSpecificInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PIRSensorSpecificInfo defaultInstance;
    public static PIRSensorSpecificInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PIRSensorSpecificInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PIRSensorSpecificInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState value = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              batteryRemain_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_PIRSensorSpecificInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_PIRSensorSpecificInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PIRSensorSpecificInfo> PARSER =
        new com.google.protobuf.AbstractParser<PIRSensorSpecificInfo>() {
      public PIRSensorSpecificInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PIRSensorSpecificInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PIRSensorSpecificInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code protobuf.PIRSensorSpecificInfo.PIRState}
     */
    public enum PIRState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CLOSED = 0;</code>
       */
      CLOSED(0, 0),
      /**
       * <code>OPENED = 1;</code>
       */
      OPENED(1, 1),
      ;

      /**
       * <code>CLOSED = 0;</code>
       */
      public static final int CLOSED_VALUE = 0;
      /**
       * <code>OPENED = 1;</code>
       */
      public static final int OPENED_VALUE = 1;


      public final int getNumber() { return value; }

      public static PIRState valueOf(int value) {
        switch (value) {
          case 0: return CLOSED;
          case 1: return OPENED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PIRState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PIRState>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PIRState>() {
              public PIRState findValueByNumber(int number) {
                return PIRState.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final PIRState[] VALUES = values();

      public static PIRState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private PIRState(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.PIRSensorSpecificInfo.PIRState)
    }

    private int bitField0_;
    // required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState state_;
    /**
     * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
     */
    public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState getState() {
      return state_;
    }

    // required int32 battery_remain = 2;
    public static final int BATTERY_REMAIN_FIELD_NUMBER = 2;
    private int batteryRemain_;
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    public boolean hasBatteryRemain() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 battery_remain = 2;</code>
     */
    public int getBatteryRemain() {
      return batteryRemain_;
    }

    private void initFields() {
      state_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState.CLOSED;
      batteryRemain_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBatteryRemain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, batteryRemain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, batteryRemain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.PIRSensorSpecificInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_PIRSensorSpecificInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_PIRSensorSpecificInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState.CLOSED;
        bitField0_ = (bitField0_ & ~0x00000001);
        batteryRemain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_PIRSensorSpecificInfo_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo build() {
        com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo buildPartial() {
        com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo result = new com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.batteryRemain_ = batteryRemain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo other) {
        if (other == com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasBatteryRemain()) {
          setBatteryRemain(other.getBatteryRemain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          
          return false;
        }
        if (!hasBatteryRemain()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;
      private com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState state_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState.CLOSED;
      /**
       * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
       */
      public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState getState() {
        return state_;
      }
      /**
       * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
       */
      public Builder setState(com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protobuf.PIRSensorSpecificInfo.PIRState state = 1;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PIRState.CLOSED;
        onChanged();
        return this;
      }

      // required int32 battery_remain = 2;
      private int batteryRemain_ ;
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public boolean hasBatteryRemain() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public int getBatteryRemain() {
        return batteryRemain_;
      }
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public Builder setBatteryRemain(int value) {
        bitField0_ |= 0x00000002;
        batteryRemain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 battery_remain = 2;</code>
       */
      public Builder clearBatteryRemain() {
        bitField0_ = (bitField0_ & ~0x00000002);
        batteryRemain_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.PIRSensorSpecificInfo)
    }

    static {
      defaultInstance = new PIRSensorSpecificInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.PIRSensorSpecificInfo)
  }

  public interface HumiditySensorSpecificInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 temperature = 1;
    /**
     * <code>required int32 temperature = 1;</code>
     */
    boolean hasTemperature();
    /**
     * <code>required int32 temperature = 1;</code>
     */
    int getTemperature();

    // required int32 humidity = 2;
    /**
     * <code>required int32 humidity = 2;</code>
     */
    boolean hasHumidity();
    /**
     * <code>required int32 humidity = 2;</code>
     */
    int getHumidity();

    // required int32 battery_remain = 3;
    /**
     * <code>required int32 battery_remain = 3;</code>
     */
    boolean hasBatteryRemain();
    /**
     * <code>required int32 battery_remain = 3;</code>
     */
    int getBatteryRemain();
  }
  /**
   * Protobuf type {@code protobuf.HumiditySensorSpecificInfo}
   */
  public static final class HumiditySensorSpecificInfo extends
      com.google.protobuf.GeneratedMessage
      implements HumiditySensorSpecificInfoOrBuilder {
    // Use HumiditySensorSpecificInfo.newBuilder() to construct.
    private HumiditySensorSpecificInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HumiditySensorSpecificInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HumiditySensorSpecificInfo defaultInstance;
    public static HumiditySensorSpecificInfo getDefaultInstance() {
      return defaultInstance;
    }

    public HumiditySensorSpecificInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HumiditySensorSpecificInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              temperature_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              humidity_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              batteryRemain_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_HumiditySensorSpecificInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_HumiditySensorSpecificInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<HumiditySensorSpecificInfo> PARSER =
        new com.google.protobuf.AbstractParser<HumiditySensorSpecificInfo>() {
      public HumiditySensorSpecificInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HumiditySensorSpecificInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HumiditySensorSpecificInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 temperature = 1;
    public static final int TEMPERATURE_FIELD_NUMBER = 1;
    private int temperature_;
    /**
     * <code>required int32 temperature = 1;</code>
     */
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 temperature = 1;</code>
     */
    public int getTemperature() {
      return temperature_;
    }

    // required int32 humidity = 2;
    public static final int HUMIDITY_FIELD_NUMBER = 2;
    private int humidity_;
    /**
     * <code>required int32 humidity = 2;</code>
     */
    public boolean hasHumidity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 humidity = 2;</code>
     */
    public int getHumidity() {
      return humidity_;
    }

    // required int32 battery_remain = 3;
    public static final int BATTERY_REMAIN_FIELD_NUMBER = 3;
    private int batteryRemain_;
    /**
     * <code>required int32 battery_remain = 3;</code>
     */
    public boolean hasBatteryRemain() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 battery_remain = 3;</code>
     */
    public int getBatteryRemain() {
      return batteryRemain_;
    }

    private void initFields() {
      temperature_ = 0;
      humidity_ = 0;
      batteryRemain_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTemperature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHumidity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBatteryRemain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, temperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, humidity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, batteryRemain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, temperature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, humidity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, batteryRemain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.HumiditySensorSpecificInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_HumiditySensorSpecificInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_HumiditySensorSpecificInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.class, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        temperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        humidity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        batteryRemain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_HumiditySensorSpecificInfo_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo build() {
        com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo buildPartial() {
        com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo result = new com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.temperature_ = temperature_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.humidity_ = humidity_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.batteryRemain_ = batteryRemain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo other) {
        if (other == com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.getDefaultInstance()) return this;
        if (other.hasTemperature()) {
          setTemperature(other.getTemperature());
        }
        if (other.hasHumidity()) {
          setHumidity(other.getHumidity());
        }
        if (other.hasBatteryRemain()) {
          setBatteryRemain(other.getBatteryRemain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemperature()) {
          
          return false;
        }
        if (!hasHumidity()) {
          
          return false;
        }
        if (!hasBatteryRemain()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 temperature = 1;
      private int temperature_ ;
      /**
       * <code>required int32 temperature = 1;</code>
       */
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 temperature = 1;</code>
       */
      public int getTemperature() {
        return temperature_;
      }
      /**
       * <code>required int32 temperature = 1;</code>
       */
      public Builder setTemperature(int value) {
        bitField0_ |= 0x00000001;
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 temperature = 1;</code>
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = 0;
        onChanged();
        return this;
      }

      // required int32 humidity = 2;
      private int humidity_ ;
      /**
       * <code>required int32 humidity = 2;</code>
       */
      public boolean hasHumidity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 humidity = 2;</code>
       */
      public int getHumidity() {
        return humidity_;
      }
      /**
       * <code>required int32 humidity = 2;</code>
       */
      public Builder setHumidity(int value) {
        bitField0_ |= 0x00000002;
        humidity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 humidity = 2;</code>
       */
      public Builder clearHumidity() {
        bitField0_ = (bitField0_ & ~0x00000002);
        humidity_ = 0;
        onChanged();
        return this;
      }

      // required int32 battery_remain = 3;
      private int batteryRemain_ ;
      /**
       * <code>required int32 battery_remain = 3;</code>
       */
      public boolean hasBatteryRemain() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 battery_remain = 3;</code>
       */
      public int getBatteryRemain() {
        return batteryRemain_;
      }
      /**
       * <code>required int32 battery_remain = 3;</code>
       */
      public Builder setBatteryRemain(int value) {
        bitField0_ |= 0x00000004;
        batteryRemain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 battery_remain = 3;</code>
       */
      public Builder clearBatteryRemain() {
        bitField0_ = (bitField0_ & ~0x00000004);
        batteryRemain_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.HumiditySensorSpecificInfo)
    }

    static {
      defaultInstance = new HumiditySensorSpecificInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.HumiditySensorSpecificInfo)
  }

  public interface SensorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string EUID = 1;
    /**
     * <code>required string EUID = 1;</code>
     */
    boolean hasEUID();
    /**
     * <code>required string EUID = 1;</code>
     */
    java.lang.String getEUID();
    /**
     * <code>required string EUID = 1;</code>
     */
    com.google.protobuf.ByteString
        getEUIDBytes();

    // required .protobuf.Sensor.SensorType Type = 2;
    /**
     * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
     */
    com.harmazing.protobuf.SensorProtos.Sensor.SensorType getType();

    // required uint64 localTime = 3;
    /**
     * <code>required uint64 localTime = 3;</code>
     */
    boolean hasLocalTime();
    /**
     * <code>required uint64 localTime = 3;</code>
     */
    long getLocalTime();

    // optional string name = 4 [default = "NA"];
    /**
     * <code>optional string name = 4 [default = "NA"];</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 4 [default = "NA"];</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 4 [default = "NA"];</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 hardwareVersion = 5;
    /**
     * <code>optional int32 hardwareVersion = 5;</code>
     */
    boolean hasHardwareVersion();
    /**
     * <code>optional int32 hardwareVersion = 5;</code>
     */
    int getHardwareVersion();

    // optional int32 softwareVersion = 6;
    /**
     * <code>optional int32 softwareVersion = 6;</code>
     */
    boolean hasSoftwareVersion();
    /**
     * <code>optional int32 softwareVersion = 6;</code>
     */
    int getSoftwareVersion();

    // optional int32 poweredOn = 7;
    /**
     * <code>optional int32 poweredOn = 7;</code>
     *
     * <pre>
     * 0:off 1:on
     * </pre>
     */
    boolean hasPoweredOn();
    /**
     * <code>optional int32 poweredOn = 7;</code>
     *
     * <pre>
     * 0:off 1:on
     * </pre>
     */
    int getPoweredOn();

    // optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;
    /**
     * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
     */
    boolean hasAcSpecificInfo();
    /**
     * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
     */
    com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo getAcSpecificInfo();
    /**
     * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
     */
    com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfoOrBuilder getAcSpecificInfoOrBuilder();

    // optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
     */
    boolean hasWdSpecificInfo();
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
     */
    com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo getWdSpecificInfo();
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
     */
    com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder getWdSpecificInfoOrBuilder();

    // optional .protobuf.RadioInfo radioInfo = 10003;
    /**
     * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
     */
    boolean hasRadioInfo();
    /**
     * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
     */
    com.harmazing.protobuf.SensorProtos.RadioInfo getRadioInfo();
    /**
     * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
     */
    com.harmazing.protobuf.SensorProtos.RadioInfoOrBuilder getRadioInfoOrBuilder();

    // optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
     */
    boolean hasWindoorInfo();
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
     */
    com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo getWindoorInfo();
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
     */
    com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder getWindoorInfoOrBuilder();

    // optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;
    /**
     * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
     */
    boolean hasPirInfo();
    /**
     * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
     */
    com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo getPirInfo();
    /**
     * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
     */
    com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfoOrBuilder getPirInfoOrBuilder();

    // optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;
    /**
     * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
     */
    boolean hasHumidityInfo();
    /**
     * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
     */
    com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo getHumidityInfo();
    /**
     * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
     */
    com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfoOrBuilder getHumidityInfoOrBuilder();
  }
  /**
   * Protobuf type {@code protobuf.Sensor}
   */
  public static final class Sensor extends
      com.google.protobuf.GeneratedMessage
      implements SensorOrBuilder {
    // Use Sensor.newBuilder() to construct.
    private Sensor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Sensor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Sensor defaultInstance;
    public static Sensor getDefaultInstance() {
      return defaultInstance;
    }

    public Sensor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Sensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              eUID_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.harmazing.protobuf.SensorProtos.Sensor.SensorType value = com.harmazing.protobuf.SensorProtos.Sensor.SensorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              localTime_ = input.readUInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              name_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hardwareVersion_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              softwareVersion_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              poweredOn_ = input.readInt32();
              break;
            }
            case 80010: {
              com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = acSpecificInfo_.toBuilder();
              }
              acSpecificInfo_ = input.readMessage(com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(acSpecificInfo_);
                acSpecificInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 80018: {
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = wdSpecificInfo_.toBuilder();
              }
              wdSpecificInfo_ = input.readMessage(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wdSpecificInfo_);
                wdSpecificInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 80026: {
              com.harmazing.protobuf.SensorProtos.RadioInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = radioInfo_.toBuilder();
              }
              radioInfo_ = input.readMessage(com.harmazing.protobuf.SensorProtos.RadioInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(radioInfo_);
                radioInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 80034: {
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = windoorInfo_.toBuilder();
              }
              windoorInfo_ = input.readMessage(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(windoorInfo_);
                windoorInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 80042: {
              com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = pirInfo_.toBuilder();
              }
              pirInfo_ = input.readMessage(com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pirInfo_);
                pirInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 80050: {
              com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = humidityInfo_.toBuilder();
              }
              humidityInfo_ = input.readMessage(com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(humidityInfo_);
                humidityInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_Sensor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_Sensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.harmazing.protobuf.SensorProtos.Sensor.class, com.harmazing.protobuf.SensorProtos.Sensor.Builder.class);
    }

    public static com.google.protobuf.Parser<Sensor> PARSER =
        new com.google.protobuf.AbstractParser<Sensor>() {
      public Sensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sensor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Sensor> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code protobuf.Sensor.SensorType}
     */
    public enum SensorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0, 0),
      /**
       * <code>AIRCONDITIONER = 1;</code>
       */
      AIRCONDITIONER(1, 1),
      /**
       * <code>WINDOWDOORSENSOR = 2;</code>
       *
       * <pre>
       * windows or door
       * </pre>
       */
      WINDOWDOORSENSOR(2, 2),
      /**
       * <code>PIRSENSOR = 3;</code>
       */
      PIRSENSOR(3, 3),
      /**
       * <code>HUMIDITYTEMPSENSRO = 4;</code>
       */
      HUMIDITYTEMPSENSRO(4, 4),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>AIRCONDITIONER = 1;</code>
       */
      public static final int AIRCONDITIONER_VALUE = 1;
      /**
       * <code>WINDOWDOORSENSOR = 2;</code>
       *
       * <pre>
       * windows or door
       * </pre>
       */
      public static final int WINDOWDOORSENSOR_VALUE = 2;
      /**
       * <code>PIRSENSOR = 3;</code>
       */
      public static final int PIRSENSOR_VALUE = 3;
      /**
       * <code>HUMIDITYTEMPSENSRO = 4;</code>
       */
      public static final int HUMIDITYTEMPSENSRO_VALUE = 4;


      public final int getNumber() { return value; }

      public static SensorType valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return AIRCONDITIONER;
          case 2: return WINDOWDOORSENSOR;
          case 3: return PIRSENSOR;
          case 4: return HUMIDITYTEMPSENSRO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<SensorType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
              public SensorType findValueByNumber(int number) {
                return SensorType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.Sensor.getDescriptor().getEnumTypes().get(0);
      }

      private static final SensorType[] VALUES = values();

      public static SensorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private SensorType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.Sensor.SensorType)
    }

    private int bitField0_;
    // required string EUID = 1;
    public static final int EUID_FIELD_NUMBER = 1;
    private java.lang.Object eUID_;
    /**
     * <code>required string EUID = 1;</code>
     */
    public boolean hasEUID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string EUID = 1;</code>
     */
    public java.lang.String getEUID() {
      java.lang.Object ref = eUID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eUID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string EUID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getEUIDBytes() {
      java.lang.Object ref = eUID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .protobuf.Sensor.SensorType Type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private com.harmazing.protobuf.SensorProtos.Sensor.SensorType type_;
    /**
     * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
     */
    public com.harmazing.protobuf.SensorProtos.Sensor.SensorType getType() {
      return type_;
    }

    // required uint64 localTime = 3;
    public static final int LOCALTIME_FIELD_NUMBER = 3;
    private long localTime_;
    /**
     * <code>required uint64 localTime = 3;</code>
     */
    public boolean hasLocalTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 localTime = 3;</code>
     */
    public long getLocalTime() {
      return localTime_;
    }

    // optional string name = 4 [default = "NA"];
    public static final int NAME_FIELD_NUMBER = 4;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 4 [default = "NA"];</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string name = 4 [default = "NA"];</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 4 [default = "NA"];</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 hardwareVersion = 5;
    public static final int HARDWAREVERSION_FIELD_NUMBER = 5;
    private int hardwareVersion_;
    /**
     * <code>optional int32 hardwareVersion = 5;</code>
     */
    public boolean hasHardwareVersion() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hardwareVersion = 5;</code>
     */
    public int getHardwareVersion() {
      return hardwareVersion_;
    }

    // optional int32 softwareVersion = 6;
    public static final int SOFTWAREVERSION_FIELD_NUMBER = 6;
    private int softwareVersion_;
    /**
     * <code>optional int32 softwareVersion = 6;</code>
     */
    public boolean hasSoftwareVersion() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 softwareVersion = 6;</code>
     */
    public int getSoftwareVersion() {
      return softwareVersion_;
    }

    // optional int32 poweredOn = 7;
    public static final int POWEREDON_FIELD_NUMBER = 7;
    private int poweredOn_;
    /**
     * <code>optional int32 poweredOn = 7;</code>
     *
     * <pre>
     * 0:off 1:on
     * </pre>
     */
    public boolean hasPoweredOn() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 poweredOn = 7;</code>
     *
     * <pre>
     * 0:off 1:on
     * </pre>
     */
    public int getPoweredOn() {
      return poweredOn_;
    }

    // optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;
    public static final int ACSPECIFICINFO_FIELD_NUMBER = 10001;
    private com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo acSpecificInfo_;
    /**
     * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
     */
    public boolean hasAcSpecificInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
     */
    public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo getAcSpecificInfo() {
      return acSpecificInfo_;
    }
    /**
     * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
     */
    public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfoOrBuilder getAcSpecificInfoOrBuilder() {
      return acSpecificInfo_;
    }

    // optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;
    public static final int WDSPECIFICINFO_FIELD_NUMBER = 10002;
    private com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo wdSpecificInfo_;
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
     */
    public boolean hasWdSpecificInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
     */
    public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo getWdSpecificInfo() {
      return wdSpecificInfo_;
    }
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
     */
    public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder getWdSpecificInfoOrBuilder() {
      return wdSpecificInfo_;
    }

    // optional .protobuf.RadioInfo radioInfo = 10003;
    public static final int RADIOINFO_FIELD_NUMBER = 10003;
    private com.harmazing.protobuf.SensorProtos.RadioInfo radioInfo_;
    /**
     * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
     */
    public boolean hasRadioInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
     */
    public com.harmazing.protobuf.SensorProtos.RadioInfo getRadioInfo() {
      return radioInfo_;
    }
    /**
     * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
     */
    public com.harmazing.protobuf.SensorProtos.RadioInfoOrBuilder getRadioInfoOrBuilder() {
      return radioInfo_;
    }

    // optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;
    public static final int WINDOORINFO_FIELD_NUMBER = 10004;
    private com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo windoorInfo_;
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
     */
    public boolean hasWindoorInfo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
     */
    public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo getWindoorInfo() {
      return windoorInfo_;
    }
    /**
     * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
     */
    public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder getWindoorInfoOrBuilder() {
      return windoorInfo_;
    }

    // optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;
    public static final int PIRINFO_FIELD_NUMBER = 10005;
    private com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo pirInfo_;
    /**
     * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
     */
    public boolean hasPirInfo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
     */
    public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo getPirInfo() {
      return pirInfo_;
    }
    /**
     * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
     */
    public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfoOrBuilder getPirInfoOrBuilder() {
      return pirInfo_;
    }

    // optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;
    public static final int HUMIDITYINFO_FIELD_NUMBER = 10006;
    private com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo humidityInfo_;
    /**
     * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
     */
    public boolean hasHumidityInfo() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
     */
    public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo getHumidityInfo() {
      return humidityInfo_;
    }
    /**
     * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
     */
    public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfoOrBuilder getHumidityInfoOrBuilder() {
      return humidityInfo_;
    }

    private void initFields() {
      eUID_ = "";
      type_ = com.harmazing.protobuf.SensorProtos.Sensor.SensorType.UNKNOWN;
      localTime_ = 0L;
      name_ = "NA";
      hardwareVersion_ = 0;
      softwareVersion_ = 0;
      poweredOn_ = 0;
      acSpecificInfo_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDefaultInstance();
      wdSpecificInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
      radioInfo_ = com.harmazing.protobuf.SensorProtos.RadioInfo.getDefaultInstance();
      windoorInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
      pirInfo_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDefaultInstance();
      humidityInfo_ = com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasEUID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLocalTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasAcSpecificInfo()) {
        if (!getAcSpecificInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWdSpecificInfo()) {
        if (!getWdSpecificInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRadioInfo()) {
        if (!getRadioInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWindoorInfo()) {
        if (!getWindoorInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPirInfo()) {
        if (!getPirInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHumidityInfo()) {
        if (!getHumidityInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getEUIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, localTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, softwareVersion_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, poweredOn_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(10001, acSpecificInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10002, wdSpecificInfo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10003, radioInfo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(10004, windoorInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(10005, pirInfo_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(10006, humidityInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getEUIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, localTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, softwareVersion_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, poweredOn_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10001, acSpecificInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10002, wdSpecificInfo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10003, radioInfo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10004, windoorInfo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10005, pirInfo_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10006, humidityInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.harmazing.protobuf.SensorProtos.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.harmazing.protobuf.SensorProtos.Sensor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Sensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.harmazing.protobuf.SensorProtos.SensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_Sensor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_Sensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.harmazing.protobuf.SensorProtos.Sensor.class, com.harmazing.protobuf.SensorProtos.Sensor.Builder.class);
      }

      // Construct using com.harmazing.protobuf.SensorProtos.Sensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAcSpecificInfoFieldBuilder();
          getWdSpecificInfoFieldBuilder();
          getRadioInfoFieldBuilder();
          getWindoorInfoFieldBuilder();
          getPirInfoFieldBuilder();
          getHumidityInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eUID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.harmazing.protobuf.SensorProtos.Sensor.SensorType.UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        localTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "NA";
        bitField0_ = (bitField0_ & ~0x00000008);
        hardwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        softwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        poweredOn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (acSpecificInfoBuilder_ == null) {
          acSpecificInfo_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDefaultInstance();
        } else {
          acSpecificInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (wdSpecificInfoBuilder_ == null) {
          wdSpecificInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
        } else {
          wdSpecificInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (radioInfoBuilder_ == null) {
          radioInfo_ = com.harmazing.protobuf.SensorProtos.RadioInfo.getDefaultInstance();
        } else {
          radioInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (windoorInfoBuilder_ == null) {
          windoorInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
        } else {
          windoorInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (pirInfoBuilder_ == null) {
          pirInfo_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDefaultInstance();
        } else {
          pirInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (humidityInfoBuilder_ == null) {
          humidityInfo_ = com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.getDefaultInstance();
        } else {
          humidityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.harmazing.protobuf.SensorProtos.internal_static_protobuf_Sensor_descriptor;
      }

      public com.harmazing.protobuf.SensorProtos.Sensor getDefaultInstanceForType() {
        return com.harmazing.protobuf.SensorProtos.Sensor.getDefaultInstance();
      }

      public com.harmazing.protobuf.SensorProtos.Sensor build() {
        com.harmazing.protobuf.SensorProtos.Sensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.harmazing.protobuf.SensorProtos.Sensor buildPartial() {
        com.harmazing.protobuf.SensorProtos.Sensor result = new com.harmazing.protobuf.SensorProtos.Sensor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eUID_ = eUID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.localTime_ = localTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hardwareVersion_ = hardwareVersion_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.softwareVersion_ = softwareVersion_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.poweredOn_ = poweredOn_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (acSpecificInfoBuilder_ == null) {
          result.acSpecificInfo_ = acSpecificInfo_;
        } else {
          result.acSpecificInfo_ = acSpecificInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (wdSpecificInfoBuilder_ == null) {
          result.wdSpecificInfo_ = wdSpecificInfo_;
        } else {
          result.wdSpecificInfo_ = wdSpecificInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (radioInfoBuilder_ == null) {
          result.radioInfo_ = radioInfo_;
        } else {
          result.radioInfo_ = radioInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (windoorInfoBuilder_ == null) {
          result.windoorInfo_ = windoorInfo_;
        } else {
          result.windoorInfo_ = windoorInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (pirInfoBuilder_ == null) {
          result.pirInfo_ = pirInfo_;
        } else {
          result.pirInfo_ = pirInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (humidityInfoBuilder_ == null) {
          result.humidityInfo_ = humidityInfo_;
        } else {
          result.humidityInfo_ = humidityInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.harmazing.protobuf.SensorProtos.Sensor) {
          return mergeFrom((com.harmazing.protobuf.SensorProtos.Sensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.harmazing.protobuf.SensorProtos.Sensor other) {
        if (other == com.harmazing.protobuf.SensorProtos.Sensor.getDefaultInstance()) return this;
        if (other.hasEUID()) {
          bitField0_ |= 0x00000001;
          eUID_ = other.eUID_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasLocalTime()) {
          setLocalTime(other.getLocalTime());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasHardwareVersion()) {
          setHardwareVersion(other.getHardwareVersion());
        }
        if (other.hasSoftwareVersion()) {
          setSoftwareVersion(other.getSoftwareVersion());
        }
        if (other.hasPoweredOn()) {
          setPoweredOn(other.getPoweredOn());
        }
        if (other.hasAcSpecificInfo()) {
          mergeAcSpecificInfo(other.getAcSpecificInfo());
        }
        if (other.hasWdSpecificInfo()) {
          mergeWdSpecificInfo(other.getWdSpecificInfo());
        }
        if (other.hasRadioInfo()) {
          mergeRadioInfo(other.getRadioInfo());
        }
        if (other.hasWindoorInfo()) {
          mergeWindoorInfo(other.getWindoorInfo());
        }
        if (other.hasPirInfo()) {
          mergePirInfo(other.getPirInfo());
        }
        if (other.hasHumidityInfo()) {
          mergeHumidityInfo(other.getHumidityInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEUID()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasLocalTime()) {
          
          return false;
        }
        if (hasAcSpecificInfo()) {
          if (!getAcSpecificInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasWdSpecificInfo()) {
          if (!getWdSpecificInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasRadioInfo()) {
          if (!getRadioInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasWindoorInfo()) {
          if (!getWindoorInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasPirInfo()) {
          if (!getPirInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasHumidityInfo()) {
          if (!getHumidityInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.harmazing.protobuf.SensorProtos.Sensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.harmazing.protobuf.SensorProtos.Sensor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string EUID = 1;
      private java.lang.Object eUID_ = "";
      /**
       * <code>required string EUID = 1;</code>
       */
      public boolean hasEUID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public java.lang.String getEUID() {
        java.lang.Object ref = eUID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          eUID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getEUIDBytes() {
        java.lang.Object ref = eUID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eUID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public Builder setEUID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        eUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public Builder clearEUID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eUID_ = getDefaultInstance().getEUID();
        onChanged();
        return this;
      }
      /**
       * <code>required string EUID = 1;</code>
       */
      public Builder setEUIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        eUID_ = value;
        onChanged();
        return this;
      }

      // required .protobuf.Sensor.SensorType Type = 2;
      private com.harmazing.protobuf.SensorProtos.Sensor.SensorType type_ = com.harmazing.protobuf.SensorProtos.Sensor.SensorType.UNKNOWN;
      /**
       * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
       */
      public com.harmazing.protobuf.SensorProtos.Sensor.SensorType getType() {
        return type_;
      }
      /**
       * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
       */
      public Builder setType(com.harmazing.protobuf.SensorProtos.Sensor.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protobuf.Sensor.SensorType Type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.harmazing.protobuf.SensorProtos.Sensor.SensorType.UNKNOWN;
        onChanged();
        return this;
      }

      // required uint64 localTime = 3;
      private long localTime_ ;
      /**
       * <code>required uint64 localTime = 3;</code>
       */
      public boolean hasLocalTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 localTime = 3;</code>
       */
      public long getLocalTime() {
        return localTime_;
      }
      /**
       * <code>required uint64 localTime = 3;</code>
       */
      public Builder setLocalTime(long value) {
        bitField0_ |= 0x00000004;
        localTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 localTime = 3;</code>
       */
      public Builder clearLocalTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        localTime_ = 0L;
        onChanged();
        return this;
      }

      // optional string name = 4 [default = "NA"];
      private java.lang.Object name_ = "NA";
      /**
       * <code>optional string name = 4 [default = "NA"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string name = 4 [default = "NA"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 4 [default = "NA"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 4 [default = "NA"];</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 4 [default = "NA"];</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 4 [default = "NA"];</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 hardwareVersion = 5;
      private int hardwareVersion_ ;
      /**
       * <code>optional int32 hardwareVersion = 5;</code>
       */
      public boolean hasHardwareVersion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hardwareVersion = 5;</code>
       */
      public int getHardwareVersion() {
        return hardwareVersion_;
      }
      /**
       * <code>optional int32 hardwareVersion = 5;</code>
       */
      public Builder setHardwareVersion(int value) {
        bitField0_ |= 0x00000010;
        hardwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hardwareVersion = 5;</code>
       */
      public Builder clearHardwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hardwareVersion_ = 0;
        onChanged();
        return this;
      }

      // optional int32 softwareVersion = 6;
      private int softwareVersion_ ;
      /**
       * <code>optional int32 softwareVersion = 6;</code>
       */
      public boolean hasSoftwareVersion() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 softwareVersion = 6;</code>
       */
      public int getSoftwareVersion() {
        return softwareVersion_;
      }
      /**
       * <code>optional int32 softwareVersion = 6;</code>
       */
      public Builder setSoftwareVersion(int value) {
        bitField0_ |= 0x00000020;
        softwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 softwareVersion = 6;</code>
       */
      public Builder clearSoftwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        softwareVersion_ = 0;
        onChanged();
        return this;
      }

      // optional int32 poweredOn = 7;
      private int poweredOn_ ;
      /**
       * <code>optional int32 poweredOn = 7;</code>
       *
       * <pre>
       * 0:off 1:on
       * </pre>
       */
      public boolean hasPoweredOn() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 poweredOn = 7;</code>
       *
       * <pre>
       * 0:off 1:on
       * </pre>
       */
      public int getPoweredOn() {
        return poweredOn_;
      }
      /**
       * <code>optional int32 poweredOn = 7;</code>
       *
       * <pre>
       * 0:off 1:on
       * </pre>
       */
      public Builder setPoweredOn(int value) {
        bitField0_ |= 0x00000040;
        poweredOn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 poweredOn = 7;</code>
       *
       * <pre>
       * 0:off 1:on
       * </pre>
       */
      public Builder clearPoweredOn() {
        bitField0_ = (bitField0_ & ~0x00000040);
        poweredOn_ = 0;
        onChanged();
        return this;
      }

      // optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;
      private com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo acSpecificInfo_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfoOrBuilder> acSpecificInfoBuilder_;
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public boolean hasAcSpecificInfo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo getAcSpecificInfo() {
        if (acSpecificInfoBuilder_ == null) {
          return acSpecificInfo_;
        } else {
          return acSpecificInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public Builder setAcSpecificInfo(com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo value) {
        if (acSpecificInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acSpecificInfo_ = value;
          onChanged();
        } else {
          acSpecificInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public Builder setAcSpecificInfo(
          com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder builderForValue) {
        if (acSpecificInfoBuilder_ == null) {
          acSpecificInfo_ = builderForValue.build();
          onChanged();
        } else {
          acSpecificInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public Builder mergeAcSpecificInfo(com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo value) {
        if (acSpecificInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              acSpecificInfo_ != com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDefaultInstance()) {
            acSpecificInfo_ =
              com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.newBuilder(acSpecificInfo_).mergeFrom(value).buildPartial();
          } else {
            acSpecificInfo_ = value;
          }
          onChanged();
        } else {
          acSpecificInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public Builder clearAcSpecificInfo() {
        if (acSpecificInfoBuilder_ == null) {
          acSpecificInfo_ = com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.getDefaultInstance();
          onChanged();
        } else {
          acSpecificInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder getAcSpecificInfoBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getAcSpecificInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      public com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfoOrBuilder getAcSpecificInfoOrBuilder() {
        if (acSpecificInfoBuilder_ != null) {
          return acSpecificInfoBuilder_.getMessageOrBuilder();
        } else {
          return acSpecificInfo_;
        }
      }
      /**
       * <code>optional .protobuf.AirConditionerSendorSpecificInfo acSpecificInfo = 10001;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfoOrBuilder> 
          getAcSpecificInfoFieldBuilder() {
        if (acSpecificInfoBuilder_ == null) {
          acSpecificInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.AirConditionerSendorSpecificInfoOrBuilder>(
                  acSpecificInfo_,
                  getParentForChildren(),
                  isClean());
          acSpecificInfo_ = null;
        }
        return acSpecificInfoBuilder_;
      }

      // optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;
      private com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo wdSpecificInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder> wdSpecificInfoBuilder_;
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public boolean hasWdSpecificInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo getWdSpecificInfo() {
        if (wdSpecificInfoBuilder_ == null) {
          return wdSpecificInfo_;
        } else {
          return wdSpecificInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public Builder setWdSpecificInfo(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo value) {
        if (wdSpecificInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wdSpecificInfo_ = value;
          onChanged();
        } else {
          wdSpecificInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public Builder setWdSpecificInfo(
          com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder builderForValue) {
        if (wdSpecificInfoBuilder_ == null) {
          wdSpecificInfo_ = builderForValue.build();
          onChanged();
        } else {
          wdSpecificInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public Builder mergeWdSpecificInfo(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo value) {
        if (wdSpecificInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              wdSpecificInfo_ != com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance()) {
            wdSpecificInfo_ =
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.newBuilder(wdSpecificInfo_).mergeFrom(value).buildPartial();
          } else {
            wdSpecificInfo_ = value;
          }
          onChanged();
        } else {
          wdSpecificInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public Builder clearWdSpecificInfo() {
        if (wdSpecificInfoBuilder_ == null) {
          wdSpecificInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
          onChanged();
        } else {
          wdSpecificInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder getWdSpecificInfoBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getWdSpecificInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder getWdSpecificInfoOrBuilder() {
        if (wdSpecificInfoBuilder_ != null) {
          return wdSpecificInfoBuilder_.getMessageOrBuilder();
        } else {
          return wdSpecificInfo_;
        }
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo wdSpecificInfo = 10002;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder> 
          getWdSpecificInfoFieldBuilder() {
        if (wdSpecificInfoBuilder_ == null) {
          wdSpecificInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder>(
                  wdSpecificInfo_,
                  getParentForChildren(),
                  isClean());
          wdSpecificInfo_ = null;
        }
        return wdSpecificInfoBuilder_;
      }

      // optional .protobuf.RadioInfo radioInfo = 10003;
      private com.harmazing.protobuf.SensorProtos.RadioInfo radioInfo_ = com.harmazing.protobuf.SensorProtos.RadioInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.RadioInfo, com.harmazing.protobuf.SensorProtos.RadioInfo.Builder, com.harmazing.protobuf.SensorProtos.RadioInfoOrBuilder> radioInfoBuilder_;
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public boolean hasRadioInfo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public com.harmazing.protobuf.SensorProtos.RadioInfo getRadioInfo() {
        if (radioInfoBuilder_ == null) {
          return radioInfo_;
        } else {
          return radioInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public Builder setRadioInfo(com.harmazing.protobuf.SensorProtos.RadioInfo value) {
        if (radioInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          radioInfo_ = value;
          onChanged();
        } else {
          radioInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public Builder setRadioInfo(
          com.harmazing.protobuf.SensorProtos.RadioInfo.Builder builderForValue) {
        if (radioInfoBuilder_ == null) {
          radioInfo_ = builderForValue.build();
          onChanged();
        } else {
          radioInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public Builder mergeRadioInfo(com.harmazing.protobuf.SensorProtos.RadioInfo value) {
        if (radioInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              radioInfo_ != com.harmazing.protobuf.SensorProtos.RadioInfo.getDefaultInstance()) {
            radioInfo_ =
              com.harmazing.protobuf.SensorProtos.RadioInfo.newBuilder(radioInfo_).mergeFrom(value).buildPartial();
          } else {
            radioInfo_ = value;
          }
          onChanged();
        } else {
          radioInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public Builder clearRadioInfo() {
        if (radioInfoBuilder_ == null) {
          radioInfo_ = com.harmazing.protobuf.SensorProtos.RadioInfo.getDefaultInstance();
          onChanged();
        } else {
          radioInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public com.harmazing.protobuf.SensorProtos.RadioInfo.Builder getRadioInfoBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getRadioInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      public com.harmazing.protobuf.SensorProtos.RadioInfoOrBuilder getRadioInfoOrBuilder() {
        if (radioInfoBuilder_ != null) {
          return radioInfoBuilder_.getMessageOrBuilder();
        } else {
          return radioInfo_;
        }
      }
      /**
       * <code>optional .protobuf.RadioInfo radioInfo = 10003;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.RadioInfo, com.harmazing.protobuf.SensorProtos.RadioInfo.Builder, com.harmazing.protobuf.SensorProtos.RadioInfoOrBuilder> 
          getRadioInfoFieldBuilder() {
        if (radioInfoBuilder_ == null) {
          radioInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.harmazing.protobuf.SensorProtos.RadioInfo, com.harmazing.protobuf.SensorProtos.RadioInfo.Builder, com.harmazing.protobuf.SensorProtos.RadioInfoOrBuilder>(
                  radioInfo_,
                  getParentForChildren(),
                  isClean());
          radioInfo_ = null;
        }
        return radioInfoBuilder_;
      }

      // optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;
      private com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo windoorInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder> windoorInfoBuilder_;
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public boolean hasWindoorInfo() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo getWindoorInfo() {
        if (windoorInfoBuilder_ == null) {
          return windoorInfo_;
        } else {
          return windoorInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public Builder setWindoorInfo(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo value) {
        if (windoorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          windoorInfo_ = value;
          onChanged();
        } else {
          windoorInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public Builder setWindoorInfo(
          com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder builderForValue) {
        if (windoorInfoBuilder_ == null) {
          windoorInfo_ = builderForValue.build();
          onChanged();
        } else {
          windoorInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public Builder mergeWindoorInfo(com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo value) {
        if (windoorInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              windoorInfo_ != com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance()) {
            windoorInfo_ =
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.newBuilder(windoorInfo_).mergeFrom(value).buildPartial();
          } else {
            windoorInfo_ = value;
          }
          onChanged();
        } else {
          windoorInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public Builder clearWindoorInfo() {
        if (windoorInfoBuilder_ == null) {
          windoorInfo_ = com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.getDefaultInstance();
          onChanged();
        } else {
          windoorInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder getWindoorInfoBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getWindoorInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      public com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder getWindoorInfoOrBuilder() {
        if (windoorInfoBuilder_ != null) {
          return windoorInfoBuilder_.getMessageOrBuilder();
        } else {
          return windoorInfo_;
        }
      }
      /**
       * <code>optional .protobuf.WinDoorSensorSpecificInfo windoorInfo = 10004;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder> 
          getWindoorInfoFieldBuilder() {
        if (windoorInfoBuilder_ == null) {
          windoorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.WinDoorSensorSpecificInfoOrBuilder>(
                  windoorInfo_,
                  getParentForChildren(),
                  isClean());
          windoorInfo_ = null;
        }
        return windoorInfoBuilder_;
      }

      // optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;
      private com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo pirInfo_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfoOrBuilder> pirInfoBuilder_;
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public boolean hasPirInfo() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo getPirInfo() {
        if (pirInfoBuilder_ == null) {
          return pirInfo_;
        } else {
          return pirInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public Builder setPirInfo(com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo value) {
        if (pirInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pirInfo_ = value;
          onChanged();
        } else {
          pirInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public Builder setPirInfo(
          com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder builderForValue) {
        if (pirInfoBuilder_ == null) {
          pirInfo_ = builderForValue.build();
          onChanged();
        } else {
          pirInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public Builder mergePirInfo(com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo value) {
        if (pirInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              pirInfo_ != com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDefaultInstance()) {
            pirInfo_ =
              com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.newBuilder(pirInfo_).mergeFrom(value).buildPartial();
          } else {
            pirInfo_ = value;
          }
          onChanged();
        } else {
          pirInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public Builder clearPirInfo() {
        if (pirInfoBuilder_ == null) {
          pirInfo_ = com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.getDefaultInstance();
          onChanged();
        } else {
          pirInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder getPirInfoBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getPirInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      public com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfoOrBuilder getPirInfoOrBuilder() {
        if (pirInfoBuilder_ != null) {
          return pirInfoBuilder_.getMessageOrBuilder();
        } else {
          return pirInfo_;
        }
      }
      /**
       * <code>optional .protobuf.PIRSensorSpecificInfo pirInfo = 10005;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfoOrBuilder> 
          getPirInfoFieldBuilder() {
        if (pirInfoBuilder_ == null) {
          pirInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.PIRSensorSpecificInfoOrBuilder>(
                  pirInfo_,
                  getParentForChildren(),
                  isClean());
          pirInfo_ = null;
        }
        return pirInfoBuilder_;
      }

      // optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;
      private com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo humidityInfo_ = com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfoOrBuilder> humidityInfoBuilder_;
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public boolean hasHumidityInfo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo getHumidityInfo() {
        if (humidityInfoBuilder_ == null) {
          return humidityInfo_;
        } else {
          return humidityInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public Builder setHumidityInfo(com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo value) {
        if (humidityInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          humidityInfo_ = value;
          onChanged();
        } else {
          humidityInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public Builder setHumidityInfo(
          com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder builderForValue) {
        if (humidityInfoBuilder_ == null) {
          humidityInfo_ = builderForValue.build();
          onChanged();
        } else {
          humidityInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public Builder mergeHumidityInfo(com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo value) {
        if (humidityInfoBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              humidityInfo_ != com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.getDefaultInstance()) {
            humidityInfo_ =
              com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.newBuilder(humidityInfo_).mergeFrom(value).buildPartial();
          } else {
            humidityInfo_ = value;
          }
          onChanged();
        } else {
          humidityInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public Builder clearHumidityInfo() {
        if (humidityInfoBuilder_ == null) {
          humidityInfo_ = com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.getDefaultInstance();
          onChanged();
        } else {
          humidityInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder getHumidityInfoBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getHumidityInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      public com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfoOrBuilder getHumidityInfoOrBuilder() {
        if (humidityInfoBuilder_ != null) {
          return humidityInfoBuilder_.getMessageOrBuilder();
        } else {
          return humidityInfo_;
        }
      }
      /**
       * <code>optional .protobuf.HumiditySensorSpecificInfo humidityInfo = 10006;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfoOrBuilder> 
          getHumidityInfoFieldBuilder() {
        if (humidityInfoBuilder_ == null) {
          humidityInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfo.Builder, com.harmazing.protobuf.SensorProtos.HumiditySensorSpecificInfoOrBuilder>(
                  humidityInfo_,
                  getParentForChildren(),
                  isClean());
          humidityInfo_ = null;
        }
        return humidityInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Sensor)
    }

    static {
      defaultInstance = new Sensor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Sensor)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_SensorInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_SensorInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_SensorInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_SensorInfoResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_AirConditionerSendorSpecificInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_AirConditionerSendorSpecificInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_RadioInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_RadioInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_WinDoorSensorSpecificInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_WinDoorSensorSpecificInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_PIRSensorSpecificInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_PIRSensorSpecificInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_HumiditySensorSpecificInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_HumiditySensorSpecificInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Sensor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Sensor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023msgdef/sensor.proto\022\010protobuf\"\032\n\nSenso" +
      "rInfo\022\014\n\004EUID\030\001 \002(\t\"`\n\022SensorInfoRespons" +
      "e\022\022\n\nreturnCode\030\001 \002(\r\022\023\n\013faultString\030\002 \001" +
      "(\t\022!\n\007sensors\030\003 \003(\0132\020.protobuf.Sensor\"\220\004" +
      "\n AirConditionerSendorSpecificInfo\022\030\n\020lo" +
      "calTemperature\030\001 \002(\005\022\031\n\021targetTemperatur" +
      "e\030\002 \002(\005\022^\n\roperationMode\030\003 \002(\0162G.protobu" +
      "f.AirConditionerSendorSpecificInfo.AirCo" +
      "nditionerOperatironMode\022Q\n\007fanMode\030\004 \002(\016" +
      "2@.protobuf.AirConditionerSendorSpecific",
      "Info.AirConditionerFanMode\022\027\n\017instantCap" +
      "acity\030\005 \002(\005\022\026\n\016accumulatedKwh\030\006 \002(\003\"_\n\034A" +
      "irConditionerOperatironMode\022\013\n\007FANONLY\020\000" +
      "\022\013\n\007WARMING\020\001\022\013\n\007COOLING\020\002\022\010\n\004AUTO\020\003\022\016\n\n" +
      "DEHUMIDITY\020\004\"r\n\025AirConditionerFanMode\022\n\n" +
      "\006SPEED1\020\001\022\n\n\006SPEED2\020\002\022\n\n\006SPEED3\020\003\022\n\n\006SPE" +
      "ED4\020\004\022\r\n\tSPEED_MAX\020\005\022\016\n\nSPEED_AUTO\020\006\022\n\n\006" +
      "SILENT\020\007\"e\n\tRadioInfo\022\025\n\raverageRxRssi\030\001" +
      " \002(\005\022\024\n\014averageRxLQI\030\002 \002(\005\022\025\n\raverageTxR" +
      "ssi\030\003 \002(\005\022\024\n\014averageTxLQI\030\004 \002(\005\"\234\001\n\031WinD",
      "oorSensorSpecificInfo\022?\n\005state\030\001 \002(\01620.p" +
      "rotobuf.WinDoorSensorSpecificInfo.WinDoo" +
      "rState\022\026\n\016battery_remain\030\002 \002(\005\"&\n\014WinDoo" +
      "rState\022\n\n\006CLOSED\020\000\022\n\n\006OPENED\020\001\"\214\001\n\025PIRSe" +
      "nsorSpecificInfo\0227\n\005state\030\001 \002(\0162(.protob" +
      "uf.PIRSensorSpecificInfo.PIRState\022\026\n\016bat" +
      "tery_remain\030\002 \002(\005\"\"\n\010PIRState\022\n\n\006CLOSED\020" +
      "\000\022\n\n\006OPENED\020\001\"[\n\032HumiditySensorSpecificI" +
      "nfo\022\023\n\013temperature\030\001 \002(\005\022\020\n\010humidity\030\002 \002" +
      "(\005\022\026\n\016battery_remain\030\003 \002(\005\"\356\004\n\006Sensor\022\014\n",
      "\004EUID\030\001 \002(\t\022)\n\004Type\030\002 \002(\0162\033.protobuf.Sen" +
      "sor.SensorType\022\021\n\tlocalTime\030\003 \002(\004\022\020\n\004nam" +
      "e\030\004 \001(\t:\002NA\022\027\n\017hardwareVersion\030\005 \001(\005\022\027\n\017" +
      "softwareVersion\030\006 \001(\005\022\021\n\tpoweredOn\030\007 \001(\005" +
      "\022C\n\016acSpecificInfo\030\221N \001(\0132*.protobuf.Air" +
      "ConditionerSendorSpecificInfo\022<\n\016wdSpeci" +
      "ficInfo\030\222N \001(\0132#.protobuf.WinDoorSensorS" +
      "pecificInfo\022\'\n\tradioInfo\030\223N \001(\0132\023.protob" +
      "uf.RadioInfo\0229\n\013windoorInfo\030\224N \001(\0132#.pro" +
      "tobuf.WinDoorSensorSpecificInfo\0221\n\007pirIn",
      "fo\030\225N \001(\0132\037.protobuf.PIRSensorSpecificIn" +
      "fo\022;\n\014humidityInfo\030\226N \001(\0132$.protobuf.Hum" +
      "iditySensorSpecificInfo\"j\n\nSensorType\022\013\n" +
      "\007UNKNOWN\020\000\022\022\n\016AIRCONDITIONER\020\001\022\024\n\020WINDOW" +
      "DOORSENSOR\020\002\022\r\n\tPIRSENSOR\020\003\022\026\n\022HUMIDITYT" +
      "EMPSENSRO\020\004B&\n\026com.harmazing.protobufB\014S" +
      "ensorProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_protobuf_SensorInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_protobuf_SensorInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_SensorInfo_descriptor,
              new java.lang.String[] { "EUID", });
          internal_static_protobuf_SensorInfoResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_protobuf_SensorInfoResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_SensorInfoResponse_descriptor,
              new java.lang.String[] { "ReturnCode", "FaultString", "Sensors", });
          internal_static_protobuf_AirConditionerSendorSpecificInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_protobuf_AirConditionerSendorSpecificInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_AirConditionerSendorSpecificInfo_descriptor,
              new java.lang.String[] { "LocalTemperature", "TargetTemperature", "OperationMode", "FanMode", "InstantCapacity", "AccumulatedKwh", });
          internal_static_protobuf_RadioInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_protobuf_RadioInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_RadioInfo_descriptor,
              new java.lang.String[] { "AverageRxRssi", "AverageRxLQI", "AverageTxRssi", "AverageTxLQI", });
          internal_static_protobuf_WinDoorSensorSpecificInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_protobuf_WinDoorSensorSpecificInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_WinDoorSensorSpecificInfo_descriptor,
              new java.lang.String[] { "State", "BatteryRemain", });
          internal_static_protobuf_PIRSensorSpecificInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_protobuf_PIRSensorSpecificInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_PIRSensorSpecificInfo_descriptor,
              new java.lang.String[] { "State", "BatteryRemain", });
          internal_static_protobuf_HumiditySensorSpecificInfo_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_protobuf_HumiditySensorSpecificInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_HumiditySensorSpecificInfo_descriptor,
              new java.lang.String[] { "Temperature", "Humidity", "BatteryRemain", });
          internal_static_protobuf_Sensor_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_protobuf_Sensor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_Sensor_descriptor,
              new java.lang.String[] { "EUID", "Type", "LocalTime", "Name", "HardwareVersion", "SoftwareVersion", "PoweredOn", "AcSpecificInfo", "WdSpecificInfo", "RadioInfo", "WindoorInfo", "PirInfo", "HumidityInfo", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
