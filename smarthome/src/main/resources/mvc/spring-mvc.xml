<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:conf/*.properties" />
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.harmazing.spms" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" conversion-service="conversionService">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
			
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="serializationInclusion">
							<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
						</property>
					</bean>
				</property>
            </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">  
		    <property name="converters">  
		       <list>   
		            <bean class="com.harmazing.spms.base.util.SpringStringToDate">  
		                <constructor-arg value="yyyy-MM-dd"/>  
		            </bean>  
		        </list>  
		    </property>  
		</bean> 
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="json" value="application/json"/> 
                <entry key="xml" value="application/xml"/> 
            </map>
	    </property>
	</bean>

	<!-- 视图文件解析配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!-- 		<property name="prefix" value="${web.view.prefix}"/> -->
<!-- 		<property name="suffix" value="${web.view.suffix}"/> -->
	</bean>
	
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler/>
	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/view/common/index.html"/>
	<!--权限菜单拦截 -->
	<mvc:interceptors>
        <mvc:interceptor>
            <!--  需要被拦截的路径 -->
            <mvc:mapping path="/view/common/menu_tree.html"/>
            <mvc:mapping path="/view/area/**"/>
            <mvc:mapping path="/view/device/**"/>
            <mvc:mapping path="/view/dialog/**"/>
            <mvc:mapping path="/view/electro/**"/>
            <mvc:mapping path="/view/permissions/**"/>
            <mvc:mapping path="/view/portal/**"/>
            <mvc:mapping path="/view/portaldefault/**"/>
            <mvc:mapping path="/view/product/**"/>
            <mvc:mapping path="/view/spmsUser/**"/>
            <mvc:mapping path="/view/sys/**"/>
            <mvc:mapping path="/view/user/**"/>
            <mvc:mapping path="/view/workflow/**"/>
            <mvc:mapping path="/view/workorder/**"/>
            <!-- 拦截处理的interceptor -->
           	<bean class="com.harmazing.spms.base.interceptor.RoleInterceptor"/>
        </mvc:interceptor>
<!--         <mvc:interceptor> -->
<!--              需要被拦截的路径 -->
<!--             <mvc:mapping path="/app/**"/> -->
<!--             <mvc:exclude-mapping path="/app/users"/> -->
<!--             <mvc:exclude-mapping path="/app/users/"/> -->
<!--             <mvc:exclude-mapping path="/app/users/*/password/*/"/> -->
<!--             <mvc:exclude-mapping path="/app/users/*/password/*"/> -->
<!--             拦截处理的interceptor -->
<!--            	<bean class="com.harmazing.spms.base.interceptor.AppInterceptor"/> -->
<!--         </mvc:interceptor> -->
    </mvc:interceptors>
	
	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
            </props>  
        </property>  
    </bean>  
	<!-- Shiro end -->
    
</beans>